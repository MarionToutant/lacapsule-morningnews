{"version":3,"sources":["ScreenHome.js","Nav.js","ScreenArticlesBySource.js","ScreenMyArticles.js","ScreenSource.js","App.js","reducers/articles.js","reducers/token.js","reducers/selectedLang.js","serviceWorker.js","index.js"],"names":["connect","dispatch","addToken","token","type","props","useState","signUpUsername","setSignUpUsername","signUpEmail","setSignUpEmail","signUpPassword","setSignUpPassword","signInEmail","setSignInEmail","signInPassword","setSignInPassword","userExists","setUserExists","listErrorsSignin","setErrorsSignin","listErrorsSignup","setErrorsSignup","handleSubmitSignup","a","fetch","method","headers","body","data","json","result","error","handleSubmitSignin","to","tabErrorsSignin","map","i","tabErrorsSignup","className","align","justify","style","padding","xs","span","lg","onChange","e","target","value","placeholder","Password","onClick","width","Nav","textAlign","mode","theme","Item","key","Meta","Card","state","addToWishList","article","articleLiked","articleList","setArticleList","articleWishList","setArticleWishList","visible","setVisible","title","setTitle","setContent","useEffect","match","params","id","findArticles","handleOk","console","log","handleCancel","handleClickAddArticle","description","content","img","urlToImage","display","justifyContent","margin","flexDirection","cover","alt","src","actions","showModal","onOk","onCancel","myArticles","wishList","deleteToWishList","articleTitle","noArticles","wishlist","setWishlist","marginTop","response","jsonResponse","wishlistFromDB","loadData","handleClickDeleteArticle","filter","object","selectedLang","changeLang","sourceList","setSourceList","setSelectedLang","langue","country","APIResultsLoading","alignItems","cursor","itemLayout","dataSource","renderItem","source","avatar","category","name","store","createStore","combineReducers","action","wishListCopy","findArticle","length","push","position","splice","App","component","ScreenHome","path","exact","ScreenSource","ScreenArticlesBySource","ScreenMyArticles","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd3eb7da.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Row,Col,Input,Button} from 'antd';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nfunction ScreenHome(props) {\r\n\r\n  const [signUpUsername, setSignUpUsername] = useState('')\r\n  const [signUpEmail, setSignUpEmail] = useState('')\r\n  const [signUpPassword, setSignUpPassword] = useState('')\r\n\r\n  const [signInEmail, setSignInEmail] = useState('')\r\n  const [signInPassword, setSignInPassword] = useState('')\r\n\r\n  const [userExists, setUserExists] = useState(false)\r\n\r\n  const [listErrorsSignin, setErrorsSignin] = useState([])\r\n  const [listErrorsSignup, setErrorsSignup] = useState([])\r\n\r\n  var handleSubmitSignup = async () => {\r\n    \r\n    const data = await fetch('/sign-up', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      body: `usernameFromFront=${signUpUsername}&emailFromFront=${signUpEmail}&passwordFromFront=${signUpPassword}`\r\n    })\r\n\r\n    const body = await data.json()\r\n\r\n    if(body.result === true){\r\n      props.addToken(body.token)\r\n      setUserExists(true)\r\n      \r\n    } else {\r\n      setErrorsSignup(body.error)\r\n    }\r\n  }\r\n\r\n  var handleSubmitSignin = async () => {\r\n \r\n    const data = await fetch('/sign-in', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n      body: `emailFromFront=${signInEmail}&passwordFromFront=${signInPassword}`\r\n    })\r\n\r\n    const body = await data.json()\r\n\r\n    if(body.result === true){\r\n      props.addToken(body.token)\r\n      setUserExists(true)\r\n      \r\n    }  else {\r\n      setErrorsSignin(body.error)\r\n    }\r\n  }\r\n\r\n  if(userExists){\r\n    return <Redirect to='/screensource' />\r\n  }\r\n\r\n  var tabErrorsSignin = listErrorsSignin.map((error,i) => {\r\n    return(<p>{error}</p>)\r\n  })\r\n\r\n  var tabErrorsSignup = listErrorsSignup.map((error,i) => {\r\n    return(<p>{error}</p>)\r\n  })\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"Login-page\">\r\n\r\n      <Row align=\"middle\" justify=\"center\" style={{padding: \"0px\"}}>\r\n  \r\n          {/* SIGN-IN */}\r\n          \r\n          <Col xs={{span: 18}} lg={{span: 9}} className=\"Sign\">\r\n                  \r\n            <Input onChange={(e) => setSignInEmail(e.target.value)} className=\"Login-input\" placeholder=\"email\" />\r\n\r\n            <Input.Password onChange={(e) => setSignInPassword(e.target.value)} className=\"Login-input\" placeholder=\"password\" />\r\n            \r\n            {tabErrorsSignin}\r\n\r\n            <Button onClick={() => handleSubmitSignin()}  style={{width:'80px'}} type=\"primary\">Sign-in</Button>\r\n          \r\n          </Col>\r\n            \r\n          \r\n          {/* SIGN-UP */}\r\n\r\n            <Col xs={{span: 18}} lg={{span: 9}} className=\"Sign\">\r\n                  \r\n              <Input onChange={(e) => setSignUpUsername(e.target.value)} className=\"Login-input\" placeholder=\"username\" />\r\n\r\n              <Input onChange={(e) => setSignUpEmail(e.target.value)} className=\"Login-input\" placeholder=\"email\" />\r\n\r\n              <Input.Password onChange={(e) => setSignUpPassword(e.target.value)} className=\"Login-input\" placeholder=\"password\" />\r\n        \r\n              {tabErrorsSignup}\r\n\r\n              <Button onClick={() => handleSubmitSignup()} style={{width:'80px'}} type=\"primary\">Sign-up</Button>\r\n            \r\n            </Col>       \r\n\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    addToken: function(token){\r\n      dispatch({type: 'addToken', token: token})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(ScreenHome)\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './App.css';\r\nimport {Menu, Icon} from 'antd'\r\n\r\nfunction Nav() {\r\n\r\n  return (\r\n    <nav >\r\n      <Menu style={{textAlign: 'center'}} mode=\"horizontal\" theme=\"dark\">\r\n\r\n        <Menu.Item key=\"mail\">\r\n          <Link to=\"/screensource\">\r\n            <Icon type=\"home\" />\r\n            Sources\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"test\">\r\n          <Link to=\"/screenmyarticles\">\r\n            <Icon type=\"read\" />\r\n            My Articles\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"app\">\r\n          <Link to=\"/\">\r\n            <Icon type=\"logout\" />\r\n            Logout\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n      </Menu>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport { Card, Icon, Modal} from 'antd';\r\nimport Nav from './Nav'\r\nimport {connect} from 'react-redux'\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction ScreenArticlesBySource(props) {\r\n\r\n  const [articleList, setArticleList] = useState([])\r\n  const [articleWishList, setArticleWishList] = useState([])\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n\r\n  // RECUPERATION ARTICLES\r\n\r\n  useEffect(() => {\r\n    const findArticles = async() => {\r\n      \r\n      const data = await fetch('/articles', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n        body: `sourcesFromFront=${props.match.params.id}`\r\n      })\r\n      \r\n      const body = await data.json()\r\n      setArticleList(body) \r\n\r\n    }\r\n\r\n    findArticles()    \r\n  },[])\r\n\r\n  // MODAL\r\n\r\n  var showModal = (title, content) => {\r\n    setVisible(true)\r\n    setTitle(title)\r\n    setContent(content)\r\n  }\r\n  var handleOk = e => {\r\n    console.log(e)\r\n    setVisible(false)\r\n  }\r\n  var handleCancel = e => {\r\n    console.log(e)\r\n    setVisible(false)\r\n  }\r\n\r\n  // ADD MY ARTICLES IN DB\r\n\r\n  var handleClickAddArticle = async (article) => {\r\n   \r\n    setArticleWishList([...articleWishList, {title: article.title, description: article.description, content: article.content, img: article.urlToImage}])\r\n    await fetch('/wishlist-article', {\r\n      method: 'POST',\r\n      headers: {'Content-Type':'application/x-www-form-urlencoded'},\r\n      body: `title=${article.title}&description=${article.description}&content=${article.content}&img=${article.urlToImage}&token=${props.token}`\r\n    });\r\n  }\r\n\r\n  // CALLBACK\r\n\r\n  return (\r\n    <div>\r\n         \r\n            <Nav/>\r\n\r\n            <div className=\"Banner\"/>\r\n\r\n            <div className=\"Card\">\r\n              {articleList.map((article,i) => (\r\n                <div key={i} style={{display:'flex',justifyContent:'center'}}>\r\n\r\n                <Card\r\n                  \r\n                  style={{ \r\n                  width: 300, \r\n                  margin:'15px', \r\n                  display:'flex',\r\n                  flexDirection: 'column',\r\n                  justifyContent:'space-between' }}\r\n                  cover={\r\n                  <img\r\n                      alt=\"example\"\r\n                      src={article.urlToImage}\r\n                  />\r\n                  }\r\n                  actions={[\r\n                      <Icon type=\"read\" key=\"ellipsis2\" onClick={() => showModal(article.title,article.content)} />,\r\n                      <Icon type=\"like\" key=\"ellipsis\" onClick={()=> {props.addToWishList(article); handleClickAddArticle(article)}} />\r\n                  ]}\r\n                  >\r\n                  \r\n                  <Meta\r\n                    title={article.title}\r\n                    description={article.description}\r\n                  />\r\n\r\n                </Card>\r\n                <Modal\r\n                  title={title}\r\n                  visible={visible}\r\n                  onOk={handleOk}\r\n                  onCancel={handleCancel}\r\n                >\r\n                  <p>{title}</p>\r\n                </Modal>\r\n\r\n              </div>\r\n\r\n              ))}\r\n              \r\n\r\n\r\n            \r\n\r\n           </div> \r\n\r\n         \r\n      \r\n      </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {token: state.token}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    addToWishList: function(article){\r\n      dispatch({type: 'addArticle',\r\n        articleLiked: article\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ScreenArticlesBySource)\r\n","import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport { Card, Icon, Modal} from 'antd';\r\nimport Nav from './Nav'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction ScreenMyArticles(props) {\r\n  const [visible, setVisible] = useState(false)\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [wishlist, setWishlist] = useState([])\r\n\r\n  // MODAL\r\n\r\n  var showModal = (title, content) => {\r\n    setVisible(true)\r\n    setTitle(title)\r\n    setContent(content)\r\n\r\n  }\r\n  var handleOk = e => {\r\n    console.log(e)\r\n    setVisible(false)\r\n  }\r\n  var handleCancel = e => {\r\n    console.log(e)\r\n    setVisible(false)\r\n  }\r\n\r\n  // NO ARTICLE\r\n\r\n  var noArticles\r\n  if(props.myArticles === 0){\r\n    noArticles = <div style={{marginTop:\"30px\"}}>No Articles</div>\r\n  }\r\n\r\n  // GET WISHLIST FROM BACKEND & DB\r\n\r\n  useEffect( () => {\r\n    async function loadData(){\r\n       var response = await fetch('/wishlist-article');\r\n       var jsonResponse = await response.json();\r\n       var wishlistFromDB = jsonResponse.wishlist.map((article,i) => {\r\n         return {title: article.title, description: article.description, content: article.content, img: article.img}\r\n       })\r\n       setWishlist(wishlistFromDB);\r\n    } \r\n    loadData()\r\n }, []);\r\n\r\n // DELETE ARTICLES FROM WISHLIST IN DB\r\n\r\n  var handleClickDeleteArticle = async (title) => {\r\n    setWishlist(wishlist.filter(object => object.title !== title))\r\n    await fetch(`/wishlist-article/${title}`, {\r\n      method: 'DELETE'\r\n    });\r\n\r\n  }\r\n\r\n  // CALLBACK\r\n\r\n  return (\r\n    <div>\r\n         \r\n            <Nav/>\r\n\r\n            <div className=\"Banner\"/>\r\n\r\n            {noArticles}\r\n\r\n            <div className=\"Card\">\r\n    \r\n\r\n            {wishlist.map((article,i) => (\r\n                <div key={i} style={{display:'flex',justifyContent:'center'}}>\r\n\r\n                  <Card\r\n                    \r\n                    style={{ \r\n                    width: 300, \r\n                    margin:'15px', \r\n                    display:'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent:'space-between' }}\r\n                    cover={\r\n                    <img\r\n                        alt=\"example\"\r\n                        src={article.img}\r\n                    />\r\n                    }\r\n                    actions={[\r\n                        <Icon type=\"read\" key=\"ellipsis2\" onClick={() => showModal(article.title,article.content)} />,\r\n                        <Icon type=\"delete\" key=\"ellipsis\" onClick={() => {props.deleteToWishList(article.title); handleClickDeleteArticle(article.title)}} />\r\n                    ]}\r\n                    >\r\n\r\n                    <Meta\r\n                      title={article.title}\r\n                      description={article.description}\r\n                    />\r\n\r\n                  </Card>\r\n                  <Modal\r\n                    title={title}\r\n                    visible={visible}\r\n                    onOk={handleOk}\r\n                    onCancel={handleCancel}\r\n                  >\r\n                    <p>{title}</p>\r\n                  </Modal>\r\n\r\n                </div>\r\n\r\n              ))}\r\n\r\n\r\n\r\n       \r\n\r\n                \r\n\r\n             </div>\r\n      \r\n \r\n\r\n      </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {myArticles: state.wishList}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    deleteToWishList: function(articleTitle){\r\n      dispatch({type: 'deleteArticle',\r\n        title: articleTitle\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ScreenMyArticles);\r\n","import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './App.css';\r\nimport { List, Avatar} from 'antd';\r\nimport Nav from './Nav'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ScreenSource(props) {\r\n\r\n  const [sourceList, setSourceList] = useState([])\r\n  const [selectedLang, setSelectedLang] = useState(props.selectedLang)\r\n \r\n\r\n\r\n  useEffect(() => {\r\n    const APIResultsLoading = async() => {\r\n      var langue = 'fr'\r\n      var country = 'fr'\r\n        \r\n      if(selectedLang === 'en'){\r\n        var langue = 'en'\r\n        var country = 'us'\r\n      }\r\n      props.changeLang(selectedLang)\r\n\r\n      const data = await fetch('/source', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n        body: `langueFromFront=${langue}&countryFromFront=${country}`\r\n      })\r\n      const body = await data.json()\r\n\r\n      setSourceList(body)\r\n    }\r\n    \r\n    /*\r\n    const SaveLang = async() => {\r\n      var langue = 'fr'\r\n      var country = 'fr'\r\n        \r\n      if(selectedLang === 'en'){\r\n        var langue = 'en'\r\n        var country = 'us'\r\n      }\r\n      const data = await fetch('/saved-langue', {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n        body: `LangueFromFront=${langue}&CountryFromFront=${country}&TokenFromFront=${props.token}`\r\n      \r\n      })\r\n      \r\n\r\n    }\r\n    SaveLang()\r\n    */\r\n    \r\n    APIResultsLoading()\r\n  }, [selectedLang])\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Nav/>\r\n       \r\n       <div style={{display:'flex', justifyContent:'center', alignItems:'center'}} className=\"Banner\">\r\n          <img style={{width:'40px', margin:'10px',cursor:'pointer'}} src='/images/fr.png' onClick={() => setSelectedLang('fr') } />\r\n          <img style={{width:'40px', margin:'10px',cursor:'pointer'}} src='/images/uk.png' onClick={() => setSelectedLang('en')} /> \r\n        </div>\r\n\r\n       <div className=\"HomeThemes\">\r\n          \r\n              <List\r\n                  itemLayout=\"horizontal\"\r\n                  dataSource={sourceList}\r\n                  renderItem={source => (\r\n                    <List.Item>\r\n                      <List.Item.Meta\r\n                        avatar={<Avatar src={`/images/${source.category}.png`} />}\r\n                        title={<Link to={`/screenarticlesbysource/${source.id}`}>{source.name}</Link>}\r\n                        description={source.description}\r\n                      />\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n\r\n\r\n          </div>\r\n                 \r\n      </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n  return {selectedLang: state.selectedLang, \r\n          token: state.token}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    changeLang: function(selectedLang){\r\n      dispatch({type: 'changeLang', selectedLang: selectedLang})\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ScreenSource)\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport './App.css';\r\n\r\nimport {provider, Provider} from 'react-redux'\r\nimport {createStore, combineReducers} from 'redux'\r\n\r\nimport wishList from './reducers/articles'\r\nimport token from './reducers/token'\r\nimport selectedLang from './reducers/selectedLang'\r\n\r\nimport ScreenHome from './ScreenHome';\r\nimport ScreenArticlesBySource from './ScreenArticlesBySource'\r\nimport ScreenMyArticles from './ScreenMyArticles'\r\nimport ScreenSource from './ScreenSource'\r\n\r\nconst store = createStore(combineReducers({wishList, token, selectedLang}))\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Switch>\r\n          <Route component={ScreenHome} path=\"/\" exact />\r\n          <Route component={ScreenSource} path=\"/screensource\" exact />\r\n          <Route component={ScreenArticlesBySource} path=\"/screenarticlesbysource/:id\" exact />\r\n          <Route component={ScreenMyArticles} path=\"/screenmyarticles\" exact />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n    \r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default function(wishList = [], action){\r\n\r\n    if(action.type === 'addArticle'){\r\n        var wishListCopy = [...wishList]\r\n\r\n        var findArticle = false\r\n\r\n        for(let i=0;i<wishListCopy.length;i++){\r\n            if(wishListCopy[i].title === action.articleLiked.title){\r\n                findArticle = true\r\n            }\r\n        }\r\n\r\n        if(!findArticle){\r\n            wishListCopy.push(action.articleLiked)\r\n        }\r\n        \r\n        return wishListCopy\r\n    } else if(action.type === 'deleteArticle'){\r\n        var wishListCopy = [...wishList]\r\n        var position = null\r\n\r\n        for(let i=0;i<wishListCopy.length;i++){\r\n            if(wishListCopy[i].title === action.title){\r\n                position = i\r\n            }\r\n        }\r\n        if(position != null){\r\n            wishListCopy.splice(position,1)\r\n        }\r\n\r\n        return wishListCopy\r\n        \r\n    } else {\r\n        return wishList\r\n    }\r\n}","export default function(token = '', action){\r\n    if(action.type === 'addToken'){\r\n        return action.token\r\n    } else {\r\n        return token\r\n    }\r\n}","export default function(selectedLang = null, action){\r\n    if(action.type === 'changeLang'){\r\n        return action.selectedLang\r\n    } else {\r\n        return selectedLang\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}